{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","_useState","useState","color","backgroundColor","_useState2","Object","slicedToArray","myStyle","setMyStyle","_useState3","_useState4","btnText","setBtnText","react_default","a","createElement","Fragment","className","style","onClick","border","Navbar","props","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","toggleMode","htmlFor","TextForm","text","setText","heading","rows","value","onChange","event","target","cursor","newText","toUpperCase","showAlert","newtext","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","defaultProps","App","setMode","setAlert","message","setTimeout","body","background","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.b8fa3dff.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function About() {\r\n  const handleEnable = () => {\r\n    if (myStyle.color === \"black\") {\r\n      setMyStyle({\r\n        color: \"white\",\r\n        backgroundColor: \"black\",\r\n        border: \"2px solid aqua\",\r\n      });\r\n      setBtnText(\"Enable Light Mode\");\r\n    } else {\r\n      setMyStyle({\r\n        color: \"black\",\r\n        backgroundColor: \"white\",\r\n      });\r\n      setBtnText(\"Enable Dark Mode\");\r\n    }\r\n  };\r\n\r\n  const [myStyle, setMyStyle] = useState({\r\n    color: \"black\",\r\n    backgroundColor: \"white\",\r\n  });\r\n  const [btnText, setBtnText] = useState(\"Enable Dark Mode\");\r\n  return (\r\n    <>\r\n      <div className=\"container my-4\">\r\n        <div className=\"card\" style={myStyle}>\r\n          <h1 className=\"card-header\">About Us</h1>\r\n          <div className=\"card-body\">\r\n            <p className=\"card-text\">\r\n              With supporting text below as a natural lead-in to additional\r\n              content. Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n              Culpa esse cumque commodi rerum eos adipisci, excepturi sequi rem\r\n              maxime repellendus quod itaque aperiam dolorem voluptas sunt\r\n              officiis in vitae eum inventore maiores delectus harum? Lorem\r\n              ipsum dolor sit amet consectetur adipisicing elit. Molestiae,\r\n              labore ex tempore, corporis nobis doloribus nemo facilis\r\n              repellendus sed eius impedit eveniet iure doloremque sit iusto in\r\n              asperiores. Sint officia explicabo, ullam provident vel voluptatum\r\n              doloribus earum, nemo nostrum sed atque a, sequi corrupti neque\r\n              magni! Quae ea a distinctio!\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"container my-4\">\r\n        <button className=\"btn btn-primary\" onClick={handleEnable}>\r\n          {btnText}\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          {/* <Link className=\"navbar-brand\" to=\"/\">\r\n            {props.title}\r\n          </Link> */}\r\n          <a className=\"navbar-brand\" href=\"/\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                  Home\r\n                </Link> */}\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link active\" to=\"/about\">\r\n                  {props.aboutText}\r\n                </Link> */}\r\n                <a className=\"nav-link active\" href=\"/about\">\r\n                  {props.aboutText}\r\n                </a>\r\n              </li>\r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n              <input\r\n                className=\"form-control me-2\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <button className=\"btn btn-primary\" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </form> */}\r\n\r\n            <div\r\n              className={`form-check form-switch text-${\r\n                props.mode === \"light\" ? \"dark\" : \"light\"\r\n              }`}\r\n            >\r\n              <input\r\n                className=\"form-check-input mx-2\"\r\n                type=\"checkbox\"\r\n                id=\"flexSwitchCheckDefault\"\r\n                onClick={props.toggleMode}\r\n              />\r\n              <label\r\n                className=\"form-check-label \"\r\n                htmlFor=\"flexSwitchCheckDefault\"\r\n              >\r\n                Enable Dark Mode\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"set title here\",\r\n  aboutText: \" About\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    // console.log(\"clicked\" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Uppercase!\", \"success\");\r\n  };\r\n\r\n  const handleLowClick = () => {\r\n    let newtext = text.toLowerCase();\r\n    setText(newtext);\r\n    props.showAlert(\"Converted to Lowercase!\", \"success\");\r\n  };\r\n\r\n  const handleClearClick = () => {\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\"Text is cleared!\", \"success\");\r\n  };\r\n\r\n  const handleCopy = () => {\r\n    // console.log(\"copy\");\r\n    let newText = document.getElementById(\"myBox\");\r\n    newText.select();\r\n    navigator.clipboard.writeText(newText.value);\r\n    props.showAlert(\"Copied to Clipboard!\", \"success\");\r\n  };\r\n\r\n  const handleRemextraSpace = () => {\r\n    // console.log(\"remove\");\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Extra space is removed!\", \"success\");\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    // console.log(\"On change\");\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const [text, setText] = useState(\"\");\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container mb-3\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n      >\r\n        <label htmlFor=\"myBox\" className=\"form-label\">\r\n          <h1>{props.heading}</h1>\r\n        </label>\r\n        <textarea\r\n          className=\"form-control\"\r\n          id=\"myBox\"\r\n          rows=\"9\"\r\n          value={text}\r\n          onChange={handleOnChange}\r\n          style={{\r\n            backgroundColor: props.mode === \"light\" ? \"white\" : \"#5f5151\",\r\n            color: props.mode === \"light\" ? \"black\" : \"white\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        ></textarea>\r\n      </div>\r\n      <div className=\"container\">\r\n        <button className=\"btn btn-primary\" onClick={handleUpClick}>\r\n          Convert to Uppercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-3\" onClick={handleLowClick}>\r\n          Convert to Lowercase\r\n        </button>\r\n        <button className=\"btn btn-primary\" onClick={handleClearClick}>\r\n          Clear Text\r\n        </button>\r\n        <button className=\"btn btn-primary mx-3\" onClick={handleCopy}>\r\n          Copy Text\r\n        </button>\r\n        <button className=\"btn btn-primary\" onClick={handleRemextraSpace}>\r\n          Remove extra space\r\n        </button>\r\n        {/* <button className=\"primary btn-primary mx-3\"></button> */}\r\n        <div\r\n          className=\"container my-4\"\r\n          style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n        >\r\n          <h2>Your text-summary</h2>\r\n          <p>\r\n            {text.split(\" \").length} words and {text.length} characters\r\n          </p>\r\n          <p>{0.008 * text.split(\" \").length} minutes to read</p>\r\n          <h3>Preview</h3>\r\n          <p>\r\n            {text.length > 0\r\n              ? text\r\n              : \"Enter text in above text-box to preview it\"}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n  const capitalize = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  };\r\n  return (\r\n    props.alert && (\r\n      <div>\r\n        <div\r\n          className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n          role=\"alert\"\r\n        >\r\n          <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n","import \"./App.css\";\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\n// import TextArea from \"./components/TextArea\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\n// import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.background = \"#5f5151\";\n      showAlert(\"Dark Mode has been enabled\", \"success\");\n      document.title = \"TextUtils - DarkMode\";\n      // setInterval(() => {\n      //   document.title = \"Install TextUtils Now\";\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = \"Ok you are awesome\";\n      // }, 1500);\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode has been enabled\", \"success\");\n      document.title = \"TextUtils - LightMode\";\n    }\n  };\n\n  return (\n    <>\n      {/* <Router> */}\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      {/* <Switch>\n          <Route exact path=\"/\"> */}\n      <TextForm\n        heading=\"Enter the text to analyze below\"\n        mode={mode}\n        showAlert={showAlert}\n      />\n      {/* </Route>\n          <Route exact path=\"/about\"> */}\n      <About />\n      {/* </Route>\n        </Switch> */}\n      {/* <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\" /> */}\n\n      {/* //   <div className=\"container my-3\"> */}\n      {/* //     {/* <TextArea heading=\"Enter you text\" /> */}\n\n      {/* // </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}